/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { folder, useControls } from "leva";

type GLTFResult = GLTF & {
  nodes: {
    Plane030: THREE.Mesh;
    Plane030_1: THREE.Mesh;
    BezierCurve: THREE.Mesh;
    Cube: THREE.Mesh;
    Cylinder002: THREE.Mesh;
    Plane009: THREE.Mesh;
    Plane010: THREE.Mesh;
  };
  materials: {
    ["Material.033"]: THREE.MeshPhysicalMaterial;
    ["Material.032"]: THREE.MeshStandardMaterial;
    ["Material.035"]: THREE.MeshStandardMaterial;
    ["Material.034"]: THREE.MeshPhysicalMaterial;
  };
};

export const Gamepad = (props: JSX.IntrinsicElements["group"]) => {
  const { nodes, materials } = useGLTF("/gamepad.gltf") as GLTFResult;
  const gamepadDebug = useControls(
    "Gamepad",
    {
      Position: folder({
        positionX: { value: -0.2, min: -0.2, max: 0.2, step: 0.001 },
        positionY: { value: 3.1935, min: 3, max: 3.2, step: 0.001 },
        positionZ: { value: 0.029, min: -0.2, max: 0.2, step: 0.001 },
      }),
      Rotation: folder({
        rotationX: { value: 0, min: 0, max: Math.PI * 2, step: 0.001 },
        rotationY: { value: 2.241, min: 0, max: Math.PI * 2, step: 0.001 },
        rotationZ: { value: 0, min: 0, max: Math.PI * 2, step: 0.001 },
      }),
      scale: { value: 0.0136, min: 0.01, max: 0.04, step: 0.0001 },
    },
    { collapsed: true },
  );

  console.log(gamepadDebug);
  return (
    <group
      {...props}
      dispose={null}
      position={[
        gamepadDebug.positionX,
        gamepadDebug.positionY,
        gamepadDebug.positionZ,
      ]}
      rotation={[
        gamepadDebug.rotationX,
        gamepadDebug.rotationY,
        gamepadDebug.rotationZ,
      ]}
      scale={gamepadDebug.scale}
    >
      <mesh
        name="Plane030"
        castShadow
        receiveShadow
        geometry={nodes.Plane030.geometry}
        material={materials["Material.033"]}
      />
      <mesh
        name="Plane030_1"
        castShadow
        receiveShadow
        geometry={nodes.Plane030_1.geometry}
        material={materials["Material.032"]}
      />
      <mesh
        name="BezierCurve"
        castShadow
        receiveShadow
        geometry={nodes.BezierCurve.geometry}
        material={materials["Material.035"]}
      />
      <mesh
        name="Cube"
        castShadow
        receiveShadow
        geometry={nodes.Cube.geometry}
        material={materials["Material.035"]}
      />
      <mesh
        name="Cylinder002"
        castShadow
        receiveShadow
        geometry={nodes.Cylinder002.geometry}
        material={materials["Material.034"]}
      />
      <mesh
        name="Plane009"
        castShadow
        receiveShadow
        geometry={nodes.Plane009.geometry}
        material={materials["Material.035"]}
      />
      <mesh
        name="Plane010"
        castShadow
        receiveShadow
        geometry={nodes.Plane010.geometry}
        material={materials["Material.035"]}
      />
    </group>
  );
};

useGLTF.preload("/gamepad.gltf");
